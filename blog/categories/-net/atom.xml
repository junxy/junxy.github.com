<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: .NET | Junior's Blog]]></title>
  <link href="http://pcme.info/blog/categories/-net/atom.xml" rel="self"/>
  <link href="http://pcme.info/"/>
  <updated>2015-05-17T18:08:44+08:00</updated>
  <id>http://pcme.info/</id>
  <author>
    <name><![CDATA[Junior Hsu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ASP.NET web application automated deployment using MS WebDeploy - client-side configuration - part 2]]></title>
    <link href="http://pcme.info/blog/2014/03/27/asp-dot-net-web-application-automated-deployment-using-ms-webdeploy-client-side-configuration-part-2/"/>
    <updated>2014-03-27T22:57:00+08:00</updated>
    <id>http://pcme.info/blog/2014/03/27/asp-dot-net-web-application-automated-deployment-using-ms-webdeploy-client-side-configuration-part-2</id>
    <content type="html"><![CDATA[<p>FYI  ; )</p>

<p><div><script src='https://gist.github.com/1eff6ccf8ed5fcdad05a.js'></script>
<noscript><pre><code>&lt;html&gt;&lt;body&gt;You are being &lt;a href=&quot;https://github.com/gist/1eff6ccf8ed5fcdad05a&quot;&gt;redirected&lt;/a&gt;.&lt;/body&gt;&lt;/html&gt;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ASP.NET web application automated deployment using MS WebDeploy - server-side configuration - part 1]]></title>
    <link href="http://pcme.info/blog/2013/11/29/asp-dot-net-web-application-automated-deployment-using-ms-webdeploy-server-side-configuration-part-1/"/>
    <updated>2013-11-29T23:14:00+08:00</updated>
    <id>http://pcme.info/blog/2013/11/29/asp-dot-net-web-application-automated-deployment-using-ms-webdeploy-server-side-configuration-part-1</id>
    <content type="html"><![CDATA[<h1>使用 MS WebDeploy 自动化部署 ASP.Net Web 程序 - 服务端配置（上）</h1>

<h2>一、环境配置</h2>

<ol>
<li>安装 Windows Server（Current 2012）、配置IIS（Google 一大把，这里不做介绍了…）</li>
<li>安装 Web Deploy （Current 3.5），使用 Web 平台安装程序。</li>
</ol>


<p><img src="http://ww4.sinaimg.cn/large/015c2b7dgw1eb1ouygmyxj20fd0e90uh.jpg" alt="选择安装0" /></p>

<p>首次使用 Web 平台安装程序，会提示并要求安装</p>

<p><img src="http://ww3.sinaimg.cn/large/015c2b7dgw1eb1n9eowg8j20oo0gqacp.jpg" alt="选择安装1" /></p>

<p>选择安装  Web Deploy，URL重写工具（可选）</p>

<p><img src="http://ww1.sinaimg.cn/large/015c2b7dgw1eb1n9f47w8j20jc0c8ac2.jpg" alt="安装完成" /></p>

<p>安装完成！</p>

<p><img src="http://ww1.sinaimg.cn/large/015c2b7dgw1eb1n9fu8djj20fc04bdg4.jpg" alt="确认安装0" /></p>

<p>确认安装是否成功</p>

<p><img src="http://ww2.sinaimg.cn/large/015c2b7dgw1eb1omkd3hcj20gp08gabc.jpg" alt="确认安装1" /></p>

<p>看到管理委派默认配置，恭喜你，环境配置完成 ；）</p>

<p><img src="http://ww2.sinaimg.cn/large/015c2b7dgw1eb1omksxmrj20qb09s75v.jpg" alt="确认安装2" /></p>

<p>安装 Web Deploy 默认会创建这两个账户，不要改动他</p>

<h2>二、配置网站支持 Web Deploy</h2>

<ol>
<li>创建 Web Deploy 网站发布用户账号，支持Windows账户和IIS用户账号，这里我们选择使用IIS用户账号。</li>
</ol>


<p><img src="http://ww4.sinaimg.cn/large/015c2b7dgw1eb1pjcd5hyj20ky0c6dhu.jpg" alt="创建账号0" /></p>

<p><img src="http://ww2.sinaimg.cn/large/015c2b7dgw1eb1pbixd7jj20d009vwf4.jpg" alt="创建账号1" /></p>

<p>添加用户，要求设置强密码</p>

<p>2.设置站点允许使用 Web Deploy 作为发布方式</p>

<p><img src="http://ww2.sinaimg.cn/large/015c2b7dgw1eb1pao9duhj20eq0jngoa.jpg" alt="启用发布0" /></p>

<p><img src="http://ww1.sinaimg.cn/large/015c2b7dgw1eb1paoosf8j20ds0dot9w.jpg" alt="启用发布1" /></p>

<p>选择之前创建的 IIS 用户账号，其他可以不用设置</p>

<p><img src="http://ww4.sinaimg.cn/large/015c2b7dgw1eb1q0vbq1vj20dr0dmwg4.jpg" alt="启用发布2" /></p>

<p>设置，当看到类似结果，恭喜你，服务端配置到此完毕！</p>

<p>接下来我将介绍 使用 Web Deploy 部署项目的部署配置，最终通过结合 Jenkins CI 达到自动化部署产品，敬请期待～ ；）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[msbuild利用cpu多核加速]]></title>
    <link href="http://pcme.info/blog/2012/09/19/p-29001/"/>
    <updated>2012-09-19T10:26:00+08:00</updated>
    <id>http://pcme.info/blog/2012/09/19/p-29001</id>
    <content type="html"><![CDATA[<p>:&gt; msbuild /t:Rebuild /p:Configuration=Release <strong>/m</strong></p>

<p>/m 自动检测cpu数量启动对应数量进程</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用NuGet包不提交到源代码控制]]></title>
    <link href="http://pcme.info/blog/2012/09/19/using-nuget-without-committing-packages/"/>
    <updated>2012-09-19T10:10:00+08:00</updated>
    <id>http://pcme.info/blog/2012/09/19/using-nuget-without-committing-packages</id>
    <content type="html"><![CDATA[<p>参考：</p>

<ul>
<li>http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages</li>
<li>http://blog.nuget.org/20120518/package-restore-and-consent.html</li>
<li>http://stackoverflow.com/questions/11261310/nuget-dont-see-allow-nuget-to-download-missing-packages-during-build</li>
</ul>


<p>错误：error : Package restore is disabled by default. To give consent, open the Visual Studio Options dialog, click on Package Manager node and check &#39;Allow NuGet to download missing packages during build.&#39; You can also give consent by setting the environment variable &#39;EnableNuGetPackageRestore&#39; to &#39;true&#39;.</p>

<p>解决：提示在环境变量中新增一个变量：</p>

<p><strong>EnableNuGetPackageRestore = true</strong></p>

<p>手动改变配置：</p>

<p>1..sln主项目中新增：</p>

<pre><code>Project("{2150E333-8FDC-42A3-9474-1A3956D46DE8}") = ".nuget", ".nuget", "{07BDA4AF-B93E-4F33-9E09-2FCA670A0A98}"
    ProjectSection(SolutionItems) = preProject
        .nuget\NuGet.Config = .nuget\NuGet.Config
        .nuget\NuGet.exe = .nuget\NuGet.exe
        .nuget\NuGet.targets = .nuget\NuGet.targets
    EndProjectSection
EndProject
</code></pre>

<p>2.拷贝.nuget目录包含3文件(nuget.config|exe|targets)</p>

<p>3.子项目文件.csproj新增：</p>

<pre><code>&lt;Project ....
  &lt;PropertyGroup&gt;
    **&lt;SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'"&gt;..\&lt;/SolutionDir&gt;**
    **&lt;RestorePackages&gt;true&lt;/RestorePackages&gt;**
  &lt;/PropertyGroup&gt;
  **&lt;Import Project="$(SolutionDir)\.nuget\nuget.targets" /&gt;**
    .....
&lt;/Project&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NuGet Server 配置 错误：未能从程序集“Nuget.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”中加载类型“NuGet.Server.DataServices.Packages”]]></title>
    <link href="http://pcme.info/blog/2012/07/13/nuget-server-setting-error/"/>
    <updated>2012-07-13T06:15:00+08:00</updated>
    <id>http://pcme.info/blog/2012/07/13/nuget-server-setting-error</id>
    <content type="html"><![CDATA[<p>上次配置 nuget server 时遇到些错误：未能从程序集“Nuget.Server, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null”中加载类型“NuGet.Server.DataServices.Packages”。，还以为是因为服务器的 webdav 有关（当时没报出错误，只是访问会出现404之类的错误），今天赫然发现，我建项目时的命名和nuget server引用的dll有些相同，于是乎，重命名建了个项目，发布到服务器上，貌似可以了，总结nuget server配置可能的几个原因：</p>

<ul>
<li>webdav冲突，在iis &amp;ldquo;处理程序映射&amp;rdquo;中删除/禁用 webdav</li>
<li>新建项目名称和nuget server名称冲突，换一个名称</li>
<li>nuget server 已知bug，更新至最新版本</li>
</ul>


<p>标题所示说的问题应该不是问题，当时我SB了。</p>

<p>Okay, enjoy it!</p>
]]></content>
  </entry>
  
</feed>
